name: Main

on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"
  pull_request:
    branches: 
      - main

jobs:
  lint:
    name: "Lint"
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup | just
      uses: extractions/setup-just@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Setup | Python 3.10
      uses: actions/setup-python@v3.0.0
      with:
        python-version: '3.10'
    - name: Setup | Pip Install
      uses: BSFishy/pip-action@v1
      with:
        packages: |
          toml
          pylint
          pylint-quotes
    - name: Lint Universal
      run: just lintpy
    - name: Lint Cpp
      run: | 
        just lintc
        if [[ $? -ne 0 ]]; then echo "Run just format to fix"; fi
  build:
    name: "Build"
    strategy:
      matrix:
        makeflag:
          - ""
          - "-DDEBUG"
          - "-DGOLD_RUSH"
    runs-on: ubuntu-latest
    container:
      image: 'devkitpro/devkita64'
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup | just
      uses: extractions/setup-just@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Setup | Python 3
      run: sudo apt-get install python3
    - name: Setup | Pip Install
      run: python3 -m pip install toml keystone
    - name: Build
      run: just make ${{ matrix.makeflag }}
  # release:
  #   name: "Release"
  #   runs-on: ubuntu-latest
  #   container:
  #     image: 'devkitpro/devkita64'
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v2
  #   - name: Setup | just
  #     uses: extractions/setup-just@v1
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #   - name: Setup | Python 3.10
  #     uses: actions/setup-python@v3.0.0
  #     with:
  #       python-version: '3.10'
  #   - name: Setup | Pip Install
  #     uses: BSFishy/pip-action@v1
  #     with:
  #       packages: |
  #         toml
  #         keystone
  #   - name: Package
  #     run: |
  #       just release
  #       just draft-release > RELEASE_NOTES.txt
  #   - name: Draft Release
  #     if: github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/v')
  #     uses: softprops/action-gh-release@v1
  #     with:
  #       draft: true
  #       body_path: RELEASE_NOTES.txt
  #       files: |
  #         save-state-*.zip
